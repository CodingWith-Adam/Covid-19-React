{"version":3,"sources":["components/Loading.jsx","components/CountryTable.jsx","components/Chart.jsx","components/Covid.jsx","App.js","serviceWorker.js","index.js"],"names":["Loading","className","role","CountryTable","this","props","countries","onSortByTotal","onSortByCountryName","onRowSelected","href","onClick","map","country","key","name","style","selected","backgroundColor","total","Component","Chart","length","data","labels","datasets","colors","width","height","options","maintainAspectRatio","Covid","state","filterText","allCountryTotal","selectedCountries","url","handleOnRowSelected","countryToUpdate","countryIndex","findIndex","c","setState","filter","sortByTotal","countryA","countryB","handleOnSortByTotal","event","handleOnSortBy","sortByCountryName","handleOnSortByCountryName","sortOperation","preventDefault","sort","handleFilterTextChange","target","value","axios","get","response","rows","split","i","row","countryName","replace","Number","push","x","toString","textAlign","numberWithCommas","id","type","onChange","aria-label","aria-describedby","placeholder","toLowerCase","indexOf","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.803651e2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"spinner-border text-primary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\n\nclass CountryTable extends Component {\n  render() {\n    const {\n      countries,\n      onSortByTotal,\n      onSortByCountryName,\n      onRowSelected,\n    } = this.props;\n    return (\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>\n              <a href=\"/\" onClick={onSortByCountryName}>\n                Country\n              </a>\n            </th>\n            <th>\n              <a href=\"/\" onClick={onSortByTotal}>\n                Total\n              </a>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {countries.map((country) => {\n            const style = {\n              backgroundColor: \"lightYellow\",\n            };\n            return (\n              <tr\n                key={country.name}\n                style={country.selected ? style : null}\n                onClick={() => onRowSelected(country)}\n              >\n                <td>{country.name}</td>\n                <td>{country.total}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default CountryTable;\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nclass Chart extends Component {\n  render() {\n    const { countries } = this.props;\n\n    if (countries.length === 0) return <div></div>;\n\n    const data = {\n      labels: countries.map((country) => country.name), //[]strings\n      datasets: [\n        {\n          data: countries.map((country) => country.total),\n          backgroundColor: colors,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <Pie\n          data={data}\n          width={100}\n          height={200}\n          options={{ maintainAspectRatio: false }}\n        ></Pie>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n\nlet colors = [\n  \"#63b598\",\n  \"#ce7d78\",\n  \"#ea9e70\",\n  \"#a48a9e\",\n  \"#c6e1e8\",\n  \"#648177\",\n  \"#0d5ac1\",\n  \"#f205e6\",\n  \"#1c0365\",\n  \"#14a9ad\",\n  \"#4ca2f9\",\n  \"#a4e43f\",\n  \"#d298e2\",\n  \"#6119d0\",\n  \"#d2737d\",\n  \"#c0a43c\",\n  \"#f2510e\",\n  \"#651be6\",\n  \"#79806e\",\n  \"#61da5e\",\n  \"#cd2f00\",\n  \"#9348af\",\n  \"#01ac53\",\n  \"#c5a4fb\",\n  \"#996635\",\n  \"#b11573\",\n  \"#4bb473\",\n  \"#75d89e\",\n  \"#2f3f94\",\n  \"#2f7b99\",\n  \"#da967d\",\n  \"#34891f\",\n  \"#b0d87b\",\n  \"#ca4751\",\n  \"#7e50a8\",\n  \"#c4d647\",\n  \"#e0eeb8\",\n  \"#11dec1\",\n  \"#289812\",\n  \"#566ca0\",\n  \"#ffdbe1\",\n  \"#2f1179\",\n  \"#935b6d\",\n  \"#916988\",\n  \"#513d98\",\n  \"#aead3a\",\n  \"#9e6d71\",\n  \"#4b5bdc\",\n  \"#0cd36d\",\n  \"#250662\",\n  \"#cb5bea\",\n  \"#228916\",\n  \"#ac3e1b\",\n  \"#df514a\",\n  \"#539397\",\n  \"#880977\",\n  \"#f697c1\",\n  \"#ba96ce\",\n  \"#679c9d\",\n  \"#c6c42c\",\n  \"#5d2c52\",\n  \"#48b41b\",\n  \"#e1cf3b\",\n  \"#5be4f0\",\n  \"#57c4d8\",\n  \"#a4d17a\",\n  \"#225b8\",\n  \"#be608b\",\n  \"#96b00c\",\n  \"#088baf\",\n  \"#f158bf\",\n  \"#e145ba\",\n  \"#ee91e3\",\n  \"#05d371\",\n  \"#5426e0\",\n  \"#4834d0\",\n  \"#802234\",\n  \"#6749e8\",\n  \"#0971f0\",\n  \"#8fb413\",\n  \"#b2b4f0\",\n  \"#c3c89d\",\n  \"#c9a941\",\n  \"#41d158\",\n  \"#fb21a3\",\n  \"#51aed9\",\n  \"#5bb32d\",\n  \"#807fb\",\n  \"#21538e\",\n  \"#89d534\",\n  \"#d36647\",\n  \"#7fb411\",\n  \"#0023b8\",\n  \"#3b8c2a\",\n  \"#986b53\",\n  \"#f50422\",\n  \"#983f7a\",\n  \"#ea24a3\",\n  \"#79352c\",\n  \"#521250\",\n  \"#c79ed2\",\n  \"#d6dd92\",\n  \"#e33e52\",\n  \"#b2be57\",\n  \"#fa06ec\",\n  \"#1bb699\",\n  \"#6b2e5f\",\n  \"#64820f\",\n  \"#1c271\",\n  \"#21538e\",\n  \"#89d534\",\n  \"#d36647\",\n  \"#7fb411\",\n  \"#0023b8\",\n  \"#3b8c2a\",\n  \"#986b53\",\n  \"#f50422\",\n  \"#983f7a\",\n  \"#ea24a3\",\n  \"#79352c\",\n  \"#521250\",\n  \"#c79ed2\",\n  \"#d6dd92\",\n  \"#e33e52\",\n  \"#b2be57\",\n  \"#fa06ec\",\n  \"#1bb699\",\n  \"#6b2e5f\",\n  \"#64820f\",\n  \"#1c271\",\n  \"#9cb64a\",\n  \"#996c48\",\n  \"#9ab9b7\",\n  \"#06e052\",\n  \"#e3a481\",\n  \"#0eb621\",\n  \"#fc458e\",\n  \"#b2db15\",\n  \"#aa226d\",\n  \"#792ed8\",\n  \"#73872a\",\n  \"#520d3a\",\n  \"#cefcb8\",\n  \"#a5b3d9\",\n  \"#7d1d85\",\n  \"#c4fd57\",\n  \"#f1ae16\",\n  \"#8fe22a\",\n  \"#ef6e3c\",\n  \"#243eeb\",\n  \"#1dc18\",\n  \"#dd93fd\",\n  \"#3f8473\",\n  \"#e7dbce\",\n  \"#421f79\",\n  \"#7a3d93\",\n  \"#635f6d\",\n  \"#93f2d7\",\n  \"#9b5c2a\",\n  \"#15b9ee\",\n  \"#0f5997\",\n  \"#409188\",\n  \"#911e20\",\n  \"#1350ce\",\n  \"#10e5b1\",\n  \"#fff4d7\",\n  \"#cb2582\",\n  \"#ce00be\",\n  \"#32d5d6\",\n  \"#17232\",\n  \"#608572\",\n  \"#c79bc2\",\n  \"#00f87c\",\n  \"#77772a\",\n  \"#6995ba\",\n  \"#fc6b57\",\n  \"#f07815\",\n  \"#8fd883\",\n  \"#060e27\",\n  \"#96e591\",\n  \"#21d52e\",\n  \"#d00043\",\n  \"#b47162\",\n  \"#1ec227\",\n  \"#4f0f6f\",\n  \"#1d1d58\",\n  \"#947002\",\n  \"#bde052\",\n  \"#e08c56\",\n  \"#28fcfd\",\n  \"#bb09b\",\n  \"#36486a\",\n  \"#d02e29\",\n  \"#1ae6db\",\n  \"#3e464c\",\n  \"#a84a8f\",\n  \"#911e7e\",\n  \"#3f16d9\",\n  \"#0f525f\",\n  \"#ac7c0a\",\n  \"#b4c086\",\n  \"#c9d730\",\n  \"#30cc49\",\n  \"#3d6751\",\n  \"#fb4c03\",\n  \"#640fc1\",\n  \"#62c03e\",\n  \"#d3493a\",\n  \"#88aa0b\",\n  \"#406df9\",\n  \"#615af0\",\n  \"#4be47\",\n  \"#2a3434\",\n  \"#4a543f\",\n  \"#79bca0\",\n  \"#a8b8d4\",\n  \"#00efd4\",\n  \"#7ad236\",\n  \"#7260d8\",\n  \"#1deaa7\",\n  \"#06f43a\",\n  \"#823c59\",\n  \"#e3d94c\",\n  \"#dc1c06\",\n  \"#f53b2a\",\n  \"#b46238\",\n  \"#2dfff6\",\n  \"#a82b89\",\n  \"#1a8011\",\n  \"#436a9f\",\n  \"#1a806a\",\n  \"#4cf09d\",\n  \"#c188a2\",\n  \"#67eb4b\",\n  \"#b308d3\",\n  \"#fc7e41\",\n  \"#af3101\",\n  \"#ff065\",\n  \"#71b1f4\",\n  \"#a2f8a5\",\n  \"#e23dd0\",\n  \"#d3486d\",\n  \"#00f7f9\",\n  \"#474893\",\n  \"#3cec35\",\n  \"#1c65cb\",\n  \"#5d1d0c\",\n  \"#2d7d2a\",\n  \"#ff3420\",\n  \"#5cdd87\",\n  \"#a259a4\",\n  \"#e4ac44\",\n  \"#1bede6\",\n  \"#8798a4\",\n  \"#d7790f\",\n  \"#b2c24f\",\n  \"#de73c2\",\n  \"#d70a9c\",\n  \"#25b67\",\n  \"#88e9b8\",\n  \"#c2b0e2\",\n  \"#86e98f\",\n  \"#ae90e2\",\n  \"#1a806b\",\n  \"#436a9e\",\n  \"#0ec0ff\",\n  \"#f812b3\",\n  \"#b17fc9\",\n  \"#8d6c2f\",\n  \"#d3277a\",\n  \"#2ca1ae\",\n  \"#9685eb\",\n  \"#8a96c6\",\n  \"#dba2e6\",\n  \"#76fc1b\",\n  \"#608fa4\",\n  \"#20f6ba\",\n  \"#07d7f6\",\n  \"#dce77a\",\n  \"#77ecca\",\n];\n","import React, { Component } from \"react\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\nimport CountryTable from \"./CountryTable\";\nimport Chart from \"./Chart\";\nimport { Search } from \"react-bootstrap-icons\";\n\nclass Covid extends Component {\n  state = {\n    countries: [],\n    filterText: \"\",\n    allCountryTotal: 0,\n    selectedCountries: [],\n  };\n\n  url =\n    \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\n\n  async componentDidMount() {\n    const response = await axios.get(this.url);\n    const rows = response.data.split(\"\\n\");\n\n    const countries = [];\n    let allCountryTotal = 0;\n\n    for (let i = 1; i < rows.length; i++) {\n      const row = rows[i].split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/); //splitting on ,\n      const countryName = row[0].replace(/\"/g, \"\");\n      const total = Number(row[4]);\n      if (countryName !== \"\") {\n        countries.push({\n          name: countryName,\n          total: total,\n        });\n        allCountryTotal += total;\n      }\n    }\n\n    // await new Promise(function (x) {\n    //   setTimeout(x, 1000);\n    // });\n\n    this.setState({ countries, allCountryTotal });\n  }\n\n  handleOnRowSelected = (countryToUpdate) => {\n    const countries = [...this.state.countries];\n\n    const countryIndex = countries.findIndex(\n      (c) => c.name === countryToUpdate.name\n    );\n\n    const country = {\n      name: countryToUpdate.name,\n      total: countryToUpdate.total,\n      selected: !countryToUpdate.selected,\n    };\n\n    countries[countryIndex] = country;\n\n    this.setState({\n      countries,\n      selectedCountries: countries.filter((c) => c.selected),\n    });\n  };\n\n  sortByTotal = (countryA, countryB) => {\n    // 0 equal\n    // 1 greater\n    // -1 less\n    if (countryB.total > countryA.total) return 1;\n    else if (countryB.total < countryA.total) return -1;\n    else return 0;\n  };\n\n  handleOnSortByTotal = (event) => {\n    this.handleOnSortBy(event, this.sortByTotal);\n  };\n\n  sortByCountryName = (countryA, countryB) => {\n    // 0 equal\n    // 1 greater\n    // -1 less\n    if (countryA.name > countryB.name) return 1;\n    else if (countryA.name < countryB.name) return -1;\n    else return 0;\n  };\n\n  handleOnSortByCountryName = (event) => {\n    this.handleOnSortBy(event, this.sortByCountryName);\n  };\n\n  handleOnSortBy = (event, sortOperation) => {\n    event.preventDefault();\n    const countries = [...this.state.countries];\n    countries.sort(sortOperation);\n    this.setState({ countries });\n  };\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  handleFilterTextChange = (event) => {\n    const filterText = event.target.value;\n    this.setState({ filterText: filterText });\n  };\n\n  render() {\n    const {\n      countries,\n      allCountryTotal,\n      selectedCountries,\n      filterText,\n    } = this.state;\n    return (\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>\n          All Country Total: {this.numberWithCommas(allCountryTotal)}\n        </h1>\n        {allCountryTotal === 0 ? (\n          <Loading />\n        ) : (\n          <div>\n            <div className=\"input-group input-group-lg mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                  <Search />\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                value={filterText}\n                onChange={this.handleFilterTextChange}\n                className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-lg\"\n                placeholder=\"Search\"\n              />\n            </div>\n\n            <Chart countries={selectedCountries} />\n            <CountryTable\n              countries={countries.filter((country) => {\n                if (filterText === \"\") {\n                  return country;\n                }\n                return (\n                  country.name\n                    .toLowerCase()\n                    .indexOf(filterText.toLowerCase()) >= 0\n                );\n              })}\n              onSortByTotal={this.handleOnSortByTotal}\n              onSortByCountryName={this.handleOnSortByCountryName}\n              onRowSelected={this.handleOnRowSelected}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Covid;\n","import React from \"react\";\nimport \"./App.css\";\nimport Covid from \"./components/Covid\";\n\nfunction App() {\n  return <Covid />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}